name: Deployment workflow

on:
  repository_dispatch:
    types: [deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - uses:  actions/checkout@v1
        with:
          fetch-depth: 0

      - uses:  actions/setup-node@v1
        with:
          node-version: '12.x'

      - name:  Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-duration-seconds: 2400

      - name:  Install AWS IAM Authenticator
        uses: prepor/action-aws-iam-authenticator@master

      - name:  Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.16.6
          helm: 2.16.5
          helmv3: 3.1.2
          command: |
            echo "Initializing Helm..."
            helm init --client-only
            echo "Updating Helm repositories..."
            helm repo update

      - name:  Install dependencies
        run: touch ~/.npmrc && printf "@affinityproject:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN\nunsafe-perm=true" > ~/.npmrc && npm ci && npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

      - name:  Specify docker image ID
        run: |
          echo "  affinidi-interop-test-service:dockerImageId: ${{ github.event.client_payload.tag }}" >> apps/server/infra/Pulumi.${{ github.event.client_payload.stackName }}.yaml

      - name:  Deploy Server
        uses: docker://pulumi/pulumi@sha256:35b72a5d7d08bdb04e4ff2fba60a29e9e43efbdc33f9453b284c8a69d81f00fe
        with:
          args: up --non-interactive --yes --cwd apps/server/infra -s affinityproject/${{ github.event.client_payload.stackName }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          INTEROP_SECRETS: ${{secrets.INTEROP_SECRETS}}    
